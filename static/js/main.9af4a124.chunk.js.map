{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/CountryPicker/CountryPicker.module.css","api/index.js","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchCountries","countries","map","name","Cards","className","styleMedia","container","Grid","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultvalue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9af4a124.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3XFXi\",\"card\":\"Cards_card__2-mH9\",\"infected\":\"Cards_infected__1H04C\",\"recovered\":\"Cards_recovered__3uI2f\",\"deaths\":\"Cards_deaths__ABRQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1OSmQ\",\"image\":\"App_image__1nf0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1LkZq\"};","import axios from 'axios';\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData =async(country) =>{\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl= `${url}/countries/${country}`;\r\n    }\r\n try{\r\n  const {data:{confirmed,recovered,deaths,lastUpdate}} =await axios.get(changeableUrl);\r\n   \r\n  return {confirmed, recovered,deaths,lastUpdate};\r\n  \r\n }\r\n catch(error){\r\n     console.log(error);\r\n\r\n }\r\n};\r\n\r\nexport const fetchCountries=async() =>{\r\n    try{\r\n        const {data:{countries}}=await axios.get(`${url}/countries`);\r\n        return countries.map((country)=> country.name);\r\n\r\n    }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n","import React from 'react';\r\nimport {Card,CardContent,Typography ,Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n const Cards =({data:{confirmed,recovered,deaths,lastUpdate}}) =>\r\n {\r\n    \r\n     if(!confirmed)\r\n     {\r\n         return 'loading...';\r\n     }\r\n     \r\n     return(\r\n         <div className={styleMedia.container}>\r\n             <Grid container spacing={3} justify=\"center\">\r\n                 <Grid item component ={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                     <CardContent>\r\n                         <Typography\r\n                             color=\"textSecondary\" gutterBottom> <b>INFECTED</b>\r\n\r\n                         </Typography>\r\n                         <Typography variant=\"h5\">\r\n                             <CountUp \r\n                             start={0}\r\n                             end={confirmed.value}\r\n                             duration={2.5}\r\n                             separator=\",\"\r\n                             />\r\n                         </Typography>\r\n                         <Typography color=\"textSecondary\">Last updated:{new Date(lastUpdate).toDateString()}</Typography>\r\n                         <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                     </CardContent>\r\n                 </Grid>\r\n                 <Grid item component ={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                     <CardContent>\r\n                         <Typography\r\n                             color=\"textSecondary\" gutterBottom> <b>RECOVERED</b>\r\n\r\n                         </Typography>\r\n                         <Typography variant=\"h5\"> <CountUp \r\n                             start={0}\r\n                             end={recovered.value}\r\n                             duration={2.5}\r\n                             separator=\",\"\r\n                             /></Typography>\r\n                         <Typography color=\"textSecondary\">Last updated:{new Date(lastUpdate).toDateString()}</Typography>\r\n                         <Typography variant=\"body2\">Number of recovories of COVID-19</Typography>\r\n                     </CardContent>\r\n                 </Grid>\r\n                 <Grid item component ={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                     <CardContent>\r\n                         <Typography\r\n                             color=\"textSecondary\" gutterBottom> <b>DEATHS</b>\r\n\r\n                         </Typography>\r\n                         <Typography variant=\"h5\"> <CountUp \r\n                             start={0}\r\n                             end={deaths.value}\r\n                             duration={2.5}\r\n                             separator=\",\"\r\n                             /></Typography>\r\n                         <Typography color=\"textSecondary\">last updated:{new Date(lastUpdate).toDateString()}</Typography>\r\n                         <Typography variant=\"body2\">Number of deaths of COVID-19</Typography>\r\n                     </CardContent>\r\n                 </Grid>\r\n\r\n             </Grid>\r\n         </div>\r\n     );\r\n }\r\n export default Cards;","import React,{useState,useEffect}  from 'react';\r\nimport{NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\n const CountryPicker =({handleCountryChange}) =>\r\n {\r\n     const [fetchedCountries,setFetchedCountries]=useState([]);\r\n     useEffect(()=> {\r\n         const fetchAPI = async()=>{\r\n             setFetchedCountries(await fetchCountries());\r\n         }\r\n         fetchAPI();\r\n        },[setFetchedCountries]\r\n     );\r\n     return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultvalue=\"\" onChange={(e) =>handleCountryChange(e.target.value)}>\r\n                <option value=\"global\"> Global </option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}> {country} </option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n       \r\n     )\r\n }\r\n\r\n export default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\nimport { fetchData } from './api';\r\n//import Cards from './components/Cards/Cards';\r\n//import Cards from './components/Chart/Chart';\r\n//import Cards from './components/CountryPicker/CountryPicker';\r\n//import CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport {Cards,CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport coronaImage from './images/image.png';\r\nclass App extends React.Component{\r\n\r\nstate={\r\n    data:{},\r\n    country: '',\r\n}\r\n\r\n  async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData});\r\n    }\r\n    handleCountryChange=async(country)=>{\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data:fetchedData,country:country});\r\n    }\r\n   \r\n\r\n\trender()\r\n\t{\r\n        const{data}=this.state;\r\n\t\treturn(\r\n\t\t\t<div className={styles.container}> \r\n            <img className= {styles.image}src={coronaImage} alt=\"COVID-19\"/>\r\n\t\t\t<Cards data={data}/>\r\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n            \r\n\t\t\t</div>\r\n        );\r\n\t}\r\n}\r\nexport default App;\r\n\t\t\t","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App /> ,document.getElementById('root'));\r\n"],"sourceRoot":""}